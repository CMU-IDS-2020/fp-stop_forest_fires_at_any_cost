#install.packages('ggplot2')
#install.packages('forecast')
#install.packages('tseries')

library(ggplot2)
library(forecast)
library(tseries)

dataset = read.csv('significant-fires.csv', stringsAsFactors = FALSE)

dataset$Start_Date = as.Date(dataset$Start_Date, format='%m/%d/%Y')

acre_ts = ts(dataset[, c('Start_Date')])

dataset$clean_acre = tsclean(acre_ts)

dataset$acre_ma = ma(dataset$clean_acre, order=7)

acre_ma_count = ts(na.omit(dataset$acre_ma), frequency=30)

decomp = stl(acre_ma_count, s.window='periodic')

deseasonal_cnt <- seasadj(decomp)

fit = auto.arima(deseasonal_cnt, seasonal=FALSE)

tsdisplay(residuals(fit), lag.max=45, main='(1,1,1) Model Residuals')

count_d1 = diff(deseasonal_cnt, differences = 1)
Acf(count_d1, main='ACF for Differenced Series')
Pacf(count_d1, main='PACF for Differenced Series')

fit2 = arima(deseasonal_cnt, order=c(1,6,7), method="CSS")

fcast <-forecast(fit2, h=30)

plot(fcast)

pred = predict(fit2, n.ahead=12)
pred

###Grouped by California
califronia_data<-(dplyr::filter(dataset, grepl("California", State)))

califronia_data$Start_Date = as.Date(califronia_data$Start_Date, format='%m/%d/%Y')

acre_ts = ts(califronia_data[, c('Start_Date')])

califronia_data$clean_acre = tsclean(acre_ts)

califronia_data$acre_ma = ma(califronia_data$clean_acre, order=7)

acre_ma_count = ts(na.omit(califronia_data$acre_ma), frequency=30)

decomp = stl(acre_ma_count, s.window='periodic')

deseasonal_cnt <- seasadj(decomp)

fit = auto.arima(deseasonal_cnt, seasonal=FALSE)

tsdisplay(residuals(fit), lag.max=45, main='(1,1,1) Model Residuals')

count_d1 = diff(deseasonal_cnt, differences = 1)
Acf(count_d1, main='ACF for Differenced Series')
Pacf(count_d1, main='PACF for Differenced Series')

fit2 = arima(deseasonal_cnt, order=c(1,6,7), method="CSS")

fcast <-forecast(fit2, h=30)

plot(fcast)

pred = predict(fit2, n.ahead=12)
pred

###Grouped by Texas
texas_data<-(dplyr::filter(dataset, grepl("Texas", State)))

texas_data$Start_Date = as.Date(texas_data$Start_Date, format='%m/%d/%Y')

acre_ts = ts(texas_data[, c('Start_Date')])

texas_data$clean_acre = tsclean(acre_ts)

texas_data$acre_ma = ma(texas_data$clean_acre, order=7)

acre_ma_count = ts(na.omit(texas_data$acre_ma), frequency=30)

decomp = stl(acre_ma_count, s.window='periodic')

deseasonal_cnt <- seasadj(decomp)

fit = auto.arima(deseasonal_cnt, seasonal=FALSE)

tsdisplay(residuals(fit), lag.max=45, main='(1,1,1) Model Residuals')

count_d1 = diff(deseasonal_cnt, differences = 1)
Acf(count_d1, main='ACF for Differenced Series')
Pacf(count_d1, main='PACF for Differenced Series')

fit2 = arima(deseasonal_cnt, order=c(1,6,7), method="CSS")

fcast <-forecast(fit2, h=30)

plot(fcast)

pred = predict(fit2, n.ahead=12)
pred

###Grouped by Alaska
alaska_data<-(dplyr::filter(dataset, grepl("Alaska", State)))

alaska_data$Start_Date = as.Date(alaska_data$Start_Date, format='%m/%d/%Y')

acre_ts = ts(alaska_data[, c('Start_Date')])

alaska_data$clean_acre = tsclean(acre_ts)

alaska_data$acre_ma = ma(alaska_data$clean_acre, order=7)

acre_ma_count = ts(na.omit(alaska_data$acre_ma), frequency=30)

decomp = stl(acre_ma_count, s.window='periodic')

deseasonal_cnt <- seasadj(decomp)

fit = auto.arima(deseasonal_cnt, seasonal=FALSE)

tsdisplay(residuals(fit), lag.max=45, main='(1,1,1) Model Residuals')

count_d1 = diff(deseasonal_cnt, differences = 1)
Acf(count_d1, main='ACF for Differenced Series')
Pacf(count_d1, main='PACF for Differenced Series')

fit2 = arima(deseasonal_cnt, order=c(1,6,7), method="CSS")

fcast <-forecast(fit2, h=30)

plot(fcast)

pred = predict(fit2, n.ahead=12)
pred
